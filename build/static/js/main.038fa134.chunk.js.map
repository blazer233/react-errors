{"version":3,"sources":["hanlder/util.js","hanlder/core.js","hanlder/index.js","App.js","reportWebVitals.js","index.js"],"names":["isComponentClass","Component","prototype","render","initialState","error","ErrorBoundary","state","updatedWithError","resetErrorBoundary","props","onReset","reset","setState","errorInfo","this","onError","componentStack","fallback","FallbackComponent","fallbackRender","fallbackProps","React","Error","children","catchreacterror","Boundary","DefaultErrorBoundary","InnerComponent","console","log","name","WrapperComponent","forwardedRef","ref","forwardRef","fnCount2","count","SafeCount2","SafeCount1","App","useState","setCount","refs_function","useRef","refs_class","useEffect","current","ListenError","arg","info","message","className","onClick","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.038fa134.chunk.js","sourcesContent":["export function isComponentClass(Component) {\r\n  return Component.prototype && Component.prototype.render;\r\n}\r\n\r\nexport function isReactMemo(Component) {\r\n  return typeof Component !== \"function\" && !!Component[\"$$typeof\"];\r\n}\r\n\r\nexport default {\r\n  isReactMemo,\r\n  isComponentClass,\r\n};\r\n","import * as React from \"react\";\r\nconst initialState = { error: null };\r\nclass ErrorBoundary extends React.Component {\r\n  state = initialState;\r\n  updatedWithError = false;\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    if (this.props.onError) {\r\n      this.props.onError(error, errorInfo.componentStack);\r\n    }\r\n  }\r\n\r\n  // 执行自定义重置逻辑，并重置组件状态\r\n  resetErrorBoundary = () => {\r\n    if (this.props.onReset) {\r\n      this.props.onReset();\r\n    }\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.updatedWithError = false;\r\n    this.setState(initialState);\r\n  };\r\n  render() {\r\n    const { fallback, FallbackComponent, fallbackRender } = this.props;\r\n    const { error } = this.state;\r\n    if (error !== null) {\r\n      const fallbackProps = {\r\n        error,\r\n        resetErrorBoundary: this.resetErrorBoundary,\r\n      };\r\n      if (React.isValidElement(fallback)) {\r\n        return fallback;\r\n      }\r\n      if (typeof fallbackRender === \"function\") {\r\n        return fallbackRender(fallbackProps);\r\n      }\r\n      if (FallbackComponent) {\r\n        return <FallbackComponent {...fallbackProps} />;\r\n      }\r\n      throw new Error(\"ErrorBoundary 组件需要传入 fallback\");\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { Component, forwardRef } from \"react\";\r\nimport { isComponentClass } from \"./util\";\r\nimport DefaultErrorBoundary from \"./core\";\r\nconst catchreacterror = (Boundary = DefaultErrorBoundary) => InnerComponent => {\r\n  if (isComponentClass(InnerComponent)) {\r\n    console.log(\"类组件\", InnerComponent.name);\r\n    class WrapperComponent extends Component {\r\n      render() {\r\n        /**\r\n         *高阶组件中使用 forwardRef 为了传递给高阶组件内部所包裹的组件中使用\r\n         */\r\n        const { forwardedRef } = this.props;\r\n        return (\r\n          <Boundary {...this.props}>\r\n            <InnerComponent {...this.props} ref={forwardedRef} />\r\n          </Boundary>\r\n        );\r\n      }\r\n    }\r\n    return forwardRef((props, ref) => (\r\n      <WrapperComponent forwardedRef={ref} {...props} />\r\n    ));\r\n  } else {\r\n    console.log(\"函数组件\", InnerComponent.name);\r\n    return forwardRef((props, ref) => (\r\n      <Boundary {...props}>\r\n        <InnerComponent {...props} forwardedRef={ref} />\r\n      </Boundary>\r\n    ));\r\n  }\r\n};\r\n\r\nexport default catchreacterror;\r\n","import React, { useState, useEffect, useRef, forwardRef } from \"react\";\nimport catchreacterror from \"./hanlder\";\nimport \"./App.css\";\nfunction fnCount1(props) {\n  if (props.count == 3) {\n    throw new Error(\"count is three\");\n  }\n  return props.count;\n}\nclass fnCount2 extends React.Component {\n  render() {\n    const { count } = this.props;\n    if (count == 2) {\n      throw new Error(\"count is two\");\n    }\n    return <span>{count}</span>;\n  }\n}\nconst SafeCount2 = catchreacterror()(fnCount2);\nconst SafeCount1 = catchreacterror()(fnCount1);\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const refs_function = useRef();\n  const refs_class = useRef();\n  useEffect(() => {\n    console.log(refs_function.current);\n    console.log(refs_class.current);\n  }, []);\n\n  const errorbackfn = ({ error, resetErrorBoundary }) => {\n    return (\n      <div role=\"alert\">\n        <p>出错啦</p>\n        <pre>{error.message}</pre>\n        <button onClick={resetErrorBoundary}>Try again</button>\n      </div>\n    );\n  };\n\n  const errorbackcom = () => <h1>出错啦,不可撤销</h1>;\n  const ListenError = (arg, info) => {\n    console.log(\"出错了:\" + arg.message, info);\n  };\n  const onReset = () => setCount(0);\n  return (\n    <div className=\"App\">\n      <section className=\"btns\">\n        <button className=\"btn\" onClick={() => setCount(count => count + 1)}>\n          +\n        </button>\n        <button className=\"btn\" onClick={() => setCount(count => count - 1)}>\n          -\n        </button>\n      </section>\n      <hr />\n      <div>\n        Class componnet:\n        <SafeCount2\n          count={count}\n          ref={refs_class}\n          fallbackRender={errorbackfn}\n          onReset={onReset}\n          onError={ListenError}\n        />\n      </div>\n      <div>\n        Function componnet:\n        <SafeCount1\n          count={count}\n          ref={refs_function}\n          FallbackComponent={errorbackcom}\n          onError={ListenError}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}